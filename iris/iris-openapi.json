{
    "openapi" : "3.0.1",
    "info" : {
      "title" : "OSINT-X API",
      "description" : "Starting investigations from direct api clients",
      "version" : "1.3.1"
    },
    "servers" : [ {
      "url" : "https://iris.web-iq.com/api",
      "description" : "Production server"
    } ],
    "paths" : {
      "/status" : {
        "get" : {
          "description" : "A JSON object with the key \"status\" and value \"running\" (both without the quotes).",
          "operationId" : "status",
          "responses" : {
            "200" : {
              "description" : "A JSON object with the key \"status\" and value \"running\" (both without the quotes).",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/connect" : {
        "post" : {
          "tags" : [ "connect" ],
          "description" : "Start connect investigation to check connections between subjects.",
          "operationId" : "startConnect",
          "requestBody" : {
            "description" : "Connect input with subjects and subject pairs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConnectScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/connect/{executionId}" : {
        "get" : {
          "tags" : [ "connect" ],
          "description" : "Retrieves the result of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the subjects, resources (web pages) on which they are mentioned together and 'paths' on social media platforms between them via the accounts as which they have been identified and the relationship between these accounts (e.g. a friendship or follower relationship).",
          "operationId" : "getConnectResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the connect investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ConnectStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/connect/{investigationId}/status" : {
        "get" : {
          "tags" : [ "connect" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getConnectStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/contact/{executionId}" : {
        "get" : {
          "tags" : [ "contact" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph contains the subjects, sameAs edges to suggested persons, which have location, addresses and phone numbers.",
          "operationId" : "getContactResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the contact investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ContactStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/contact" : {
        "post" : {
          "tags" : [ "contact" ],
          "description" : "Start contact investigation to find contact information for subjects.",
          "operationId" : "startContactInvestigation",
          "requestBody" : {
            "description" : "Contact input with subjects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/contact/countries" : {
        "get" : {
          "tags" : [ "contact" ],
          "description" : "Retrieves the countries available for contact investigations",
          "operationId" : "getCountriesForContact",
          "responses" : {
            "200" : {
              "description" : "ISO 3166-1 alpha-2 country codes see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/contact/test" : {
        "post" : {
          "tags" : [ "contact" ],
          "description" : "Start a test contact investigation. The same results are found and added for each subject.",
          "operationId" : "startTestContactInvestigation",
          "requestBody" : {
            "description" : "Contact input with subjects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/contact/{investigationId}/status" : {
        "get" : {
          "tags" : [ "contact" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getContactStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/cse-risk" : {
        "post" : {
          "tags" : [ "cse-risk" ],
          "description" : "Start CSE Risk online research",
          "operationId" : "startCSERisk",
          "requestBody" : {
            "description" : "A list of one or more subject references, a graph containing those subject(s) and optionally options to enable sub-investigations. A subject is a Person optionally with (annotated) first and last name(s), optionally related to an Account (account id or username is required for social media investigations, username is required for Darknet investigations) and/or a Location.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSERiskScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Online research ID with which the status or result of the research can be retrieved",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied. Input must contain at least one subject."
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/cse-risk/{executionId}" : {
        "get" : {
          "tags" : [ "cse-risk" ],
          "description" : "Retrieves the status of the execution, a result if finished and successful, an error when finished but failed, null when not yet finished. The result contains a graph with the input subject(s) and related accounts (which may have been enriched) and locations, and additional accounts and related resources and/or occupations resulting from the investigation.",
          "operationId" : "getCSERiskExecutionResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/CSERiskStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/cse-risk/{investigationId}/status" : {
        "get" : {
          "tags" : [ "cse-risk" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getCSERiskStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook-account-status-check" : {
        "post" : {
          "tags" : [ "facebook-account-status-check" ],
          "description" : "Facebook account status check using a facebook ID or URL",
          "operationId" : "startFacebookAccountStatusCheck",
          "requestBody" : {
            "description" : "Facebook profile URL or id",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "The Facebook account status (one of \"online\", \"suspended\" and \"disabled\") accompanied by the moment the check was performed on Facebook (in milliseconds since epoch)",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook-account-status-check/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-account-status-check" ],
          "operationId" : "getFacebookAccountStatusCheckExecutionResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "The status of the execution, a result if finished and successful, an error when finished but failed, null when not yet finished",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookAccountStatusCheckExecutionStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook-account-status-check/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-account-status-check" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getFacebookAccountStatusCheckExecutionStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/details" : {
        "post" : {
          "tags" : [ "facebook-details" ],
          "description" : "Get details of a Facebook profile.",
          "operationId" : "startDetailsInvestigation",
          "requestBody" : {
            "description" : "Facebook details input containing the url, accountId or username of the profile to retrieve details from",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacebookDetailScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/details/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-details" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the profile and its details.",
          "operationId" : "getDetailsResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-details" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getDetailsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/details" : {
        "post" : {
          "tags" : [ "facebook-event" ],
          "description" : "Get details of a Facebook event.",
          "operationId" : "startEventDetailsInvestigation",
          "requestBody" : {
            "description" : "Url of event to extract details from",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventDetailScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/details/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-event" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the event and its details.",
          "operationId" : "getEventDetailsResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-event" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getEventDetailsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/posts" : {
        "post" : {
          "tags" : [ "facebook-event" ],
          "description" : "Get posts of a Facebook event.",
          "operationId" : "startEventPostsInvestigation",
          "requestBody" : {
            "description" : "Url of event to extract posts from",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventPostsScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/posts/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-event" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the event and its posts.",
          "operationId" : "getEventPostsResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/posts/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-event" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getEventPostsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/search" : {
        "post" : {
          "tags" : [ "facebook-event" ],
          "description" : "Search for Facebook events",
          "operationId" : "startEventSearchInvestigation",
          "requestBody" : {
            "description" : "Keywords to be used for searching",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/search/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-event" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found events",
          "operationId" : "getEventSearchResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/event/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-event" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getEventSearchStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/friends" : {
        "post" : {
          "tags" : [ "facebook-friends" ],
          "description" : "Start investigation for Facebook friends.",
          "operationId" : "startFacebookFriendsInvestigation",
          "requestBody" : {
            "description" : "Facebook friends input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacebookFriendsScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/friends/test" : {
        "post" : {
          "tags" : [ "facebook-friends" ],
          "description" : "Start a test investigation for Facebook friends.",
          "operationId" : "startTestFacebookFriendsInvestigation",
          "requestBody" : {
            "description" : "Facebook friends input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacebookFriendsScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/friends/{investigationId}" : {
        "get" : {
          "tags" : [ "facebook-friends" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found profiles",
          "operationId" : "getFacebookFriendsResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/friends/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-friends" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getFacebookFriendsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/details" : {
        "post" : {
          "tags" : [ "facebook-group" ],
          "description" : "Get details of a Facebook group.",
          "operationId" : "startGroupDetailsInvestigation",
          "requestBody" : {
            "description" : "Url of group to extract details from",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupDetailScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/details/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-group" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the group and its details.",
          "operationId" : "getGroupDetailsResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the facebook investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-group" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getGroupDetailsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/posts" : {
        "post" : {
          "tags" : [ "facebook-group" ],
          "description" : "Get posts of a Facebook group.",
          "operationId" : "startGroupPostsInvestigation",
          "requestBody" : {
            "description" : "Url of Facebook group to extract posts from",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupPostsScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/posts/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-group" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the group and its posts.",
          "operationId" : "getGroupPostsResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/posts/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-group" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getGroupPostsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/search" : {
        "post" : {
          "tags" : [ "facebook-group" ],
          "description" : "Search for Facebook groups",
          "operationId" : "startGroupSearchInvestigation",
          "requestBody" : {
            "description" : "Keywords to be used for searching",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/search/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-group" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found groups",
          "operationId" : "getGroupSearchResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/group/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-group" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getGroupSearchStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/page/details" : {
        "post" : {
          "tags" : [ "facebook-page" ],
          "description" : "Get details of a Facebook page.",
          "operationId" : "startPageDetailsInvestigation",
          "requestBody" : {
            "description" : "Facebook page details input containing the url of the page to retrieve details from",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PageDetailScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/page/details/{executionId}" : {
        "get" : {
          "tags" : [ "facebook-page" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the page and its details.",
          "operationId" : "getPageDetailsResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/page/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-page" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getPageDetailsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/page/search" : {
        "post" : {
          "tags" : [ "facebook-page-search" ],
          "description" : "Start Facebook page search investigation.",
          "operationId" : "startFacebookPageSearchInvestigation",
          "requestBody" : {
            "description" : "Facebook page search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacebookPageSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/page/search/{investigationId}" : {
        "get" : {
          "tags" : [ "facebook-page-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found pages",
          "operationId" : "getFacebookPageSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/page/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-page-search" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getFacebookPageSearchStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/profile/search" : {
        "post" : {
          "tags" : [ "facebook-profile-search" ],
          "description" : "Start Facebook profile search investigation.",
          "operationId" : "startFacebookProfileSearchInvestigation",
          "requestBody" : {
            "description" : "Facebook profile search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacebookProfileSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/profile/search/test" : {
        "post" : {
          "tags" : [ "facebook-profile-search" ],
          "description" : "Start a test Facebook profile search investigation.",
          "operationId" : "startFacebookTestProfileSearchInvestigation",
          "requestBody" : {
            "description" : "Facebook profile search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FacebookProfileSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/profile/search/{investigationId}" : {
        "get" : {
          "tags" : [ "facebook-profile-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found profiles",
          "operationId" : "getFacebookProfileSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/FacebookStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/facebook/profile/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "facebook-profile-search" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getFacebookProfileSearchStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/google/search/{investigationId}" : {
        "get" : {
          "tags" : [ "google-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found pages",
          "operationId" : "getGoogleSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/GoogleStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/google/search" : {
        "post" : {
          "tags" : [ "google-search" ],
          "description" : "Start Google search investigation.",
          "operationId" : "startGoogleSearchInvestigation",
          "requestBody" : {
            "description" : "Google search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoogleSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/instagram/profile/details" : {
        "post" : {
          "tags" : [ "instagram-profile-details" ],
          "description" : "Get details of an Instagram profile.",
          "operationId" : "startProfileDetailsDetailsInvestigation",
          "requestBody" : {
            "description" : "Instagram profile details input with Instagram account.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstagramProfileDetailsScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/instagram/profile/details/{executionId}" : {
        "get" : {
          "tags" : [ "instagram-profile-details" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the profile and its details.",
          "operationId" : "getProfileDetailsResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the Instagram investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InstagramStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/instagram/profile/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "instagram-profile-details" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getProfileDetailsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/instagram/profile/search" : {
        "post" : {
          "tags" : [ "instagram-profile-search" ],
          "description" : "Start Instagram profile search investigation.",
          "operationId" : "startInstagramSearchInvestigation",
          "requestBody" : {
            "description" : "Instagram profile search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InstagramProfileSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/instagram/profile/search/{investigationId}" : {
        "get" : {
          "tags" : [ "instagram-profile-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found profiles",
          "operationId" : "getInstagramProfileSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InstagramStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/instagram/profile/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "instagram-profile-search" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getInstagramProfileSearchStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/linkedin/details" : {
        "post" : {
          "tags" : [ "linkedin-details" ],
          "description" : "Get details of a LinkedIn profile.",
          "operationId" : "startDetailsInvestigation_1",
          "requestBody" : {
            "description" : "LinkedIn details input containing the url or username of the profile to retrieve details from",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedInDetailScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/linkedin/details/{executionId}" : {
        "get" : {
          "tags" : [ "linkedin-details" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the profile and its details.",
          "operationId" : "getDetailsResult_1",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/LinkedInStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/linkedin/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "linkedin-details" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getDetailsStatus_1",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/linkedin/profile/search" : {
        "post" : {
          "tags" : [ "linkedin-profile-search" ],
          "description" : "Start LinkedIn profile search investigation.",
          "operationId" : "startLinkedInProfileSearchInvestigation",
          "requestBody" : {
            "description" : "LinkedIn profile search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedInProfileSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/linkedin/profile/search/{investigationId}" : {
        "get" : {
          "tags" : [ "linkedin-profile-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found profiles",
          "operationId" : "getLinkedInProfileSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/LinkedInStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/linkedin/profile/search/test" : {
        "post" : {
          "tags" : [ "linkedin-profile-search" ],
          "description" : "Start a test LinkedIn profile search investigation.",
          "operationId" : "startLinkedInTestProfileSearchInvestigation",
          "requestBody" : {
            "description" : "LinkedIn profile search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LinkedInProfileSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/linkedin/profile/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "linkedin-profile-search" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getLinkedInProfileSearchStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/risk/locales/{locale}/categories" : {
        "get" : {
          "tags" : [ "risk" ],
          "description" : "Retrieves the risk categories available for a locale",
          "operationId" : "getCategories",
          "parameters" : [ {
            "name" : "locale",
            "in" : "path",
            "description" : "The locale for which the risk categories should be listed.",
            "required" : true,
            "schema" : {
              "type" : "string"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "The risk categories available with this locale",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "404" : {
              "description" : "Invalid locale supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/risk/locales" : {
        "get" : {
          "tags" : [ "risk" ],
          "description" : "Retrieves the locales available for risk investigations",
          "operationId" : "getLocales",
          "responses" : {
            "200" : {
              "description" : "Locales with language and region sub tags as defined in https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry (but in all upper case).",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "uniqueItems" : true,
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/risk/{executionId}" : {
        "get" : {
          "tags" : [ "risk" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the subjects, resources (web pages) on which they are mentioned with risks.",
          "operationId" : "getRiskResult",
          "parameters" : [ {
            "name" : "executionId",
            "in" : "path",
            "description" : "The executionId returned by the start of the risk investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/RiskStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/risk" : {
        "post" : {
          "tags" : [ "risk" ],
          "description" : "Start risk investigation to check risks of subjects.",
          "operationId" : "startInvestigation",
          "requestBody" : {
            "description" : "Risk input with subjects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RiskScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/risk/{investigationId}/status" : {
        "get" : {
          "tags" : [ "risk" ],
          "description" : "Retrieves whether the execution of the investigation has completed, erroneously or successfully.",
          "operationId" : "getRiskStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/tiktok/profile/details" : {
        "post" : {
          "tags" : [ "tiktok-profile-details" ],
          "description" : "Start TikTok details investigation.",
          "operationId" : "startTiktokDetailsInvestigation",
          "requestBody" : {
            "description" : "TikTok details input with account information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TiktokProfileDetailsScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/tiktok/profile/details/{investigationId}" : {
        "get" : {
          "tags" : [ "tiktok-profile-details" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the details of the account",
          "operationId" : "getTiktokProfileDetailsResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/TiktokStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/tiktok/profile/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "tiktok-profile-details" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getTiktokProfileDetailsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/tiktok/profile/search" : {
        "post" : {
          "tags" : [ "tiktok-profile-search" ],
          "description" : "Start TikTok profile search investigation.",
          "operationId" : "startTiktokSearchInvestigation",
          "requestBody" : {
            "description" : "TikTok profile search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TiktokProfileSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/tiktok/profile/search/{investigationId}" : {
        "get" : {
          "tags" : [ "tiktok-profile-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found profiles",
          "operationId" : "getTiktokProfileSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/TiktokStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/tiktok/profile/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "tiktok-profile-search" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getInstagramProfileSearchStatus_1",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/web/search" : {
        "post" : {
          "tags" : [ "web-search" ],
          "description" : "Start Web search investigation.",
          "operationId" : "startWebSearchInvestigation",
          "requestBody" : {
            "description" : "Web search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/web/search/{investigationId}" : {
        "get" : {
          "tags" : [ "web-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found pages",
          "operationId" : "getWebSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/WebSearchStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/youtube/profile/details" : {
        "post" : {
          "tags" : [ "youtube-profile-details" ],
          "description" : "Start YouTube details investigation.",
          "operationId" : "startYoutubeDetailsInvestigation",
          "requestBody" : {
            "description" : "YouTube details input with account information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YoutubeProfileDetailsScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/youtube/profile/details/{investigationId}" : {
        "get" : {
          "tags" : [ "youtube-profile-details" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the details of the account",
          "operationId" : "getYoutubeProfileDetailsResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/YoutubeStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/youtube/profile/details/{investigationId}/status" : {
        "get" : {
          "tags" : [ "youtube-profile-details" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getYoutubeProfileDetailsStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/youtube/profile/search/{investigationId}" : {
        "get" : {
          "tags" : [ "youtube-profile-search" ],
          "description" : "Retrieves the status of the investigation. This contains a result if finished successfully, an error when failed or neither when not yet finished. The result is a graph containing the found profiles",
          "operationId" : "getYoutubeProfileSearchResult",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "description" : "The investigationId returned by the start of the investigation.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/YoutubeStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/youtube/profile/search/{investigationId}/status" : {
        "get" : {
          "tags" : [ "youtube-profile-search" ],
          "description" : "Retrieves whether the execution of the investigation has completed successfully.",
          "operationId" : "getYoutubeProfileSearchStatus",
          "parameters" : [ {
            "name" : "investigationId",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "default response",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/InvestigationStatus"
                  }
                }
              }
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      },
      "/youtube/profile/search" : {
        "post" : {
          "tags" : [ "youtube-profile-search" ],
          "description" : "Start YoutTube profile search investigation.",
          "operationId" : "startYoutubeSearchInvestigation",
          "requestBody" : {
            "description" : "YouTube profile search input with subject information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/YoutubeProfileSearchScope"
                }
              }
            },
            "required" : true
          },
          "responses" : {
            "200" : {
              "description" : "Execution started identifier",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ExecutionStarted"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid input supplied"
            }
          },
          "security" : [ {
            "basicAuth" : [ ]
          } ]
        }
      }
    },
    "components" : {
      "schemas" : {
        "ApiStatus" : {
          "type" : "object",
          "properties" : {
            "status" : {
              "type" : "string"
            }
          }
        },
        "ExecutionStarted" : {
          "type" : "object",
          "properties" : {
            "executionId" : {
              "type" : "string",
              "format" : "uuid"
            }
          },
          "description" : "Response with an executionId which is a token for retrieving the result of an investigation."
        },
        "Account" : {
          "type" : "object",
          "description" : "An (online) account, e.g. on a social media platform.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Identity"
          }, {
            "type" : "object",
            "properties" : {
              "accountId" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AccountId"
                }
              },
              "userName" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UserName"
                }
              },
              "screenName" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ScreenName"
                }
              },
              "firstActivity" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DateTimestamp"
                }
              },
              "lastActivity" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DateTimestamp"
                }
              },
              "avatar" : {
                "type" : "array",
                "description" : "Use HasAvatar edges instead.",
                "deprecated" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Content"
                }
              },
              "bio" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              },
              "connectionCount" : {
                "type" : "array",
                "description" : "Connections count, indicating the number of bi-directional connections of this account. So connections where A follows B and B follows A, where A is this account. It is not the sum of followerCount anf followingCount.",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "followerCount" : {
                "type" : "array",
                "description" : "Followers count, indicating the number of uni-directional connections where this account is the destination vertex. So a connection where B follows A, but A does not follow B, where A is this account",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "followingCount" : {
                "type" : "array",
                "description" : "Following count, indicating the number of uni-directional connections where this account is the starting vertex. So a connection where A follows B, but B does not follow A, where A is this account",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "commentCount" : {
                "type" : "array",
                "description" : "Comment count, indicating the number of comments published by this account.",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "postCount" : {
                "type" : "array",
                "description" : "Post count, indicating the number of posts published by this account.",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "albumCount" : {
                "type" : "array",
                "description" : "Album count, indicating the number of albums created by this account.",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "status" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AccountStatus"
                }
              },
              "visibility" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AccountVisibility"
                }
              }
            }
          } ]
        },
        "AccountId" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          },
          "description" : "A system oriented account identifier, e.g. '42' or '775005d4-5dca-466a-87e2-013af5958da9'."
        },
        "AccountOn" : {
          "type" : "object",
          "description" : "Indicates that an Account is active in a particular environment (e.g. facebook), e.g. because it is registered there, or can publish content, etc. Typically this would be a website.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "AccountStatus" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "enum" : [ "ONLINE", "OFFLINE", "NOT_FOUND" ]
            }
          }
        },
        "AccountVisibility" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "enum" : [ "PUBLIC", "PRIVATE" ]
            }
          }
        },
        "Address" : {
          "required" : [ "_type" ],
          "type" : "object",
          "properties" : {
            "_type" : {
              "type" : "string"
            }
          },
          "description" : "An address as either an (opaque) address string or as an annotated address; that is, a list of strings, each annotated with its role in the address (e.g. street, locality or country).",
          "discriminator" : {
            "propertyName" : "_type"
          }
        },
        "AddressElement" : {
          "type" : "object",
          "properties" : {
            "role" : {
              "type" : "string",
              "description" : "The various roles for elements in an AnnotatedAddress.",
              "enum" : [ "STREET_NAME", "HOUSE_NUMBER_PART", "STREET_ADDRESS", "POSTAL_CODE", "LOCALITY", "PROVINCE", "STATE", "COUNTRY_NAME", "COUNTRY_CODE" ]
            },
            "value" : {
              "type" : "string"
            }
          },
          "description" : "An element in an AnnotatedAddress: a string labeled with a specific 'role', e.g. STREET_NAME."
        },
        "AddressString" : {
          "type" : "object",
          "description" : "An address string of which the elements (tokens) aren't annotated. Use an AnnotatedAddress when more information is available, e.g. a separate street address, postal code and locality.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Address"
          }, {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string"
              }
            }
          } ]
        },
        "AnnotatedAddress" : {
          "type" : "object",
          "description" : "The annotated address components that compose an address, e.g. street, house number, etc. By extending AddressElementRole this class can support any address that can be written as a sequence of address elements. E.g.  supporting Japanese addresses would entail adding roles such as prefecture, districts, blocks, etc.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Address"
          }, {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AddressElement"
                }
              }
            }
          } ]
        },
        "AnnotatedPersonName" : {
          "type" : "object",
          "description" : "A name of a person that is expressed as a sequence of PersonNameElements that correspond to parts of the name with a PersonNameElementRole annotation. E.g. 'John O Doe': John (given name) O (initial) Doe (family name).",
          "allOf" : [ {
            "$ref" : "#/components/schemas/PersonName"
          }, {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PersonNameElement"
                }
              }
            }
          } ]
        },
        "AssociatedWith" : {
          "type" : "object",
          "description" : "Indicates that the Vertex is associated with a certain RiskIndicator.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "AverageRating" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/AverageRatingValue"
            }
          },
          "description" : "An average rating found in a Google Place."
        },
        "AverageRatingValue" : {
          "required" : [ "rating", "ratingScaleMax", "ratingScaleMin" ],
          "type" : "object",
          "description" : "A rating value that gives the average over a number of ratings. Amount references to the number of ratings this is the average of.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/RatingValue"
          }, {
            "type" : "object",
            "properties" : {
              "numRatings" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          } ]
        },
        "BusinessStatus" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/BusinessStatusValue"
            }
          }
        },
        "BusinessStatusValue" : {
          "required" : [ "businessStatusType" ],
          "type" : "object",
          "properties" : {
            "businessStatusType" : {
              "type" : "string",
              "enum" : [ "OPERATIONAL", "CLOSED_TEMPORARILY", "CLOSED_PERMANENTLY" ]
            }
          }
        },
        "Caption" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "CheckIn" : {
          "type" : "object",
          "description" : "Indicates that an Account checked in on another vertex, e.g. an account or location.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          }, {
            "type" : "object",
            "properties" : {
              "visitedOn" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DateTimestamp"
                }
              }
            }
          } ]
        },
        "Comment" : {
          "type" : "object",
          "description" : "A comment on a resource.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Resource"
          } ]
        },
        "CommentOn" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "ConnectScope" : {
          "required" : [ "graph", "subjects" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subjects" : {
              "type" : "array",
              "description" : "Pairs of subjects to investigation whether connections between them can be found through open source intelligence.",
              "items" : {
                "$ref" : "#/components/schemas/VertexPair"
              }
            },
            "web" : {
              "type" : "boolean",
              "description" : "Whether to investigate connections found on the web in general."
            },
            "facebook" : {
              "type" : "boolean",
              "description" : "Whether to investigate connections on facebook."
            },
            "twitter" : {
              "type" : "boolean",
              "description" : "Whether to investigate connections on twitter."
            },
            "linkedin" : {
              "type" : "boolean",
              "description" : "Whether to investigate connections on linkedin."
            },
            "instagram" : {
              "type" : "boolean",
              "description" : "Whether to investigate connections on instagram."
            }
          },
          "description" : "The 'scope' of a connect investigation: the (background) information available on the investigation subjects and a list of pairs of entities to investigate (the subjects)."
        },
        "Content" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/ContentValue"
            }
          },
          "description" : "Content of a resource, profile picture, etc. represented by a base64 encoded string.",
          "deprecated" : true
        },
        "ContentValue" : {
          "type" : "object",
          "properties" : {
            "bytes" : {
              "type" : "string",
              "format" : "byte"
            },
            "text" : {
              "type" : "string"
            },
            "md5" : {
              "type" : "string"
            },
            "contentType" : {
              "type" : "string",
              "nullable" : true
            }
          },
          "description" : "Content as a base64 encoded string (bytes) with meta data: md5,  and (optionally) content type. Or content as a string (text) with content type 'text'"
        },
        "CounterValue" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "description" : "A counter for objects related to a vertex, for example the number of photos in an album or the number of followers of an account."
        },
        "Country" : {
          "required" : [ "_type" ],
          "type" : "object",
          "properties" : {
            "_type" : {
              "type" : "string"
            }
          },
          "description" : "A country as either a country code (2 uppercase characters) or as country name.",
          "discriminator" : {
            "propertyName" : "_type"
          }
        },
        "CountryCode" : {
          "required" : [ "value" ],
          "type" : "object",
          "description" : "Country code in all uppercase as defined in ISO 3166-1 alpha-2",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Country"
          }, {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string"
              }
            }
          } ]
        },
        "CountryName" : {
          "required" : [ "value" ],
          "type" : "object",
          "description" : "Full country name",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Country"
          }, {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string"
              }
            }
          } ]
        },
        "Date" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "format" : "date"
            }
          },
          "description" : "A (local) date value, e.g. 2017-07-21."
        },
        "DateTimestamp" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "format" : "date-time"
            }
          },
          "description" : "With value in ISO 8601 time format"
        },
        "Degree" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "Depicts" : {
          "type" : "object",
          "description" : "Indicates that something is depicted in a resource, e.g. a location is shown in an image.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Description" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "DriverLicense" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/DriverLicenseValue"
            }
          },
          "description" : "Information on a person's driver license."
        },
        "DriverLicenseValue" : {
          "type" : "object",
          "properties" : {
            "documentId" : {
              "type" : "string"
            }
          }
        },
        "Edge" : {
          "required" : [ "_type", "destination", "start" ],
          "type" : "object",
          "properties" : {
            "start" : {
              "type" : "string",
              "description" : "Represents an entity (a person, facebook account, web resource, etc.) and its properties.",
              "format" : "uuid"
            },
            "destination" : {
              "type" : "string",
              "description" : "Represents an entity (a person, facebook account, web resource, etc.) and its properties.",
              "format" : "uuid"
            },
            "_type" : {
              "type" : "string"
            }
          },
          "description" : "A (directed) edge associating two vertices with a particular label (the _type of the edge).",
          "discriminator" : {
            "propertyName" : "_type"
          }
        },
        "Education" : {
          "type" : "object",
          "description" : "An education at an organization",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "educationInterval" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Interval"
                }
              },
              "degree" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Degree"
                }
              },
              "educationDescription" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              }
            }
          } ]
        },
        "EmailAddress" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "email" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EmailAddressString"
                }
              }
            }
          } ]
        },
        "EmailAddressString" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "Employee" : {
          "type" : "object",
          "description" : "Indicates that a person is employed as employment",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Employer" : {
          "type" : "object",
          "description" : "Indicates that an organization is employer of a employment",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Employment" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "interval" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Interval"
                }
              },
              "jobDescription" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              },
              "position" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Position"
                }
              },
              "employmentClassification" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EmploymentClassification"
                }
              }
            }
          } ]
        },
        "EmploymentClassification" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/EmploymentClassificationValue"
            }
          }
        },
        "EmploymentClassificationValue" : {
          "required" : [ "classificationType" ],
          "type" : "object",
          "properties" : {
            "classificationType" : {
              "type" : "string",
              "enum" : [ "RELATED_TO_CHILDREN" ]
            }
          }
        },
        "Enriches" : {
          "type" : "object",
          "description" : "Indicates that a Resource enriches another Resource. Example: Image enriches Post",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "EventId" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          },
          "description" : "A system oriented event identifier, e.g. '42' or '775005d4-5dca-466a-87e2-013af5958da9'."
        },
        "EventType" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "enum" : [ "IN_PERSON", "ONLINE" ]
            }
          }
        },
        "FacebookAccount" : {
          "type" : "object",
          "description" : "An account on Facebook, accountId corresponds to https://www.facebook.com/profile.php?id={accountId}, userName corresponds to https://www.facebook.com/{userName}, screenName corresponds to the name of the account home page.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          }, {
            "type" : "object",
            "properties" : {
              "dateOfBirth" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PartialDateTime"
                }
              },
              "gender" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Gender"
                }
              }
            }
          } ]
        },
        "FacebookEvent" : {
          "type" : "object",
          "description" : "An event on Facebook that is hosted by a profile, page or group.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "eventId" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EventId"
                }
              },
              "description" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              },
              "goingCount" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "interestedCount" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "eventType" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/EventType"
                }
              },
              "homepage" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Url"
                }
              },
              "title" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Title"
                }
              },
              "startDateTime" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DateTimestamp"
                }
              },
              "endDateTime" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DateTimestamp"
                }
              }
            }
          } ]
        },
        "FacebookGroup" : {
          "type" : "object",
          "description" : "A group on Facebook",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "groupId" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/GroupId"
                }
              },
              "groupType" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Label"
                }
              },
              "topic" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Label"
                }
              },
              "memberCount" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "screenName" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ScreenName"
                }
              },
              "homepage" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Url"
                }
              },
              "description" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              },
              "visibility" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AccountVisibility"
                }
              },
              "creationDate" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Date"
                }
              }
            }
          } ]
        },
        "FacebookPage" : {
          "type" : "object",
          "description" : "A page on Facebook that is used to represent a company or organization.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          }, {
            "type" : "object",
            "properties" : {
              "likesCount" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "category" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          } ]
        },
        "Follows" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "FriendOf" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Gender" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "enum" : [ "MALE", "FEMALE", "OTHER" ]
            }
          },
          "description" : "A person's gender."
        },
        "GeographicCoordinate" : {
          "type" : "object",
          "properties" : {
            "latitude" : {
              "type" : "number",
              "format" : "float"
            },
            "longitude" : {
              "type" : "number",
              "format" : "float"
            }
          }
        },
        "GeographicLocation" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/GeographicCoordinate"
            }
          }
        },
        "GoogleAccount" : {
          "type" : "object",
          "description" : "An account on Google. The homepage references to a page that contains all the reviews that are written by this account, as Google accounts don't have their own 'profile' page.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          } ]
        },
        "GooglePlace" : {
          "type" : "object",
          "description" : "An organization on Google Places, people with a Google account can place reviews for these places. AverageRating is the average rating over all reviews.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          }, {
            "type" : "object",
            "properties" : {
              "averageRating" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/AverageRating"
                }
              },
              "businessStatus" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/BusinessStatus"
                }
              }
            }
          } ]
        },
        "Graph" : {
          "type" : "object",
          "properties" : {
            "vertices" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Vertex"
              }
            },
            "edges" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Edge"
              }
            }
          },
          "description" : "A graph of vertices and edges representing entities and their relationships that occur in IRIS open source investigations. Properties of vertices (and sometimes edges) are multi-valued; that is, information provided with regards to or collected on an entity (or relationship) may be expressed multiple times. For instance, a Person may have one or more names or birth dates."
        },
        "GroupId" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          },
          "description" : "A system oriented group identifier, e.g. '42' or '775005d4-5dca-466a-87e2-013af5958da9'."
        },
        "HasAvatar" : {
          "type" : "object",
          "description" : "Indicates that an Account uses the connected resource as an Avatar on it's respective social media platform.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "HasEducation" : {
          "type" : "object",
          "description" : "Indicates that a person has an education.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "HasEmailAddress" : {
          "type" : "object",
          "description" : "Associates a LegalIdentity to an EmailAddress.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "HasPhoneNumber" : {
          "type" : "object",
          "description" : "Associates a LegalIdentity to a PhoneNumber.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "HostedBy" : {
          "type" : "object",
          "description" : "Indicates that an Event is hostedBy an Account.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "IdentificationDocument" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/IdentificationDocumentValue"
            }
          },
          "description" : "Information on a person's identification document (e.g. a passport or ID card)."
        },
        "IdentificationDocumentValue" : {
          "type" : "object",
          "properties" : {
            "documentId" : {
              "type" : "string"
            }
          }
        },
        "IdentifiedAs" : {
          "type" : "object",
          "description" : "Indicates that a Person or Organization is (tentatively) identified as an Account. I.e. the legal identity is operating / controlling the account by for instance logging in as the account, communicating through the account,etc.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Identity" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "homepage" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Url"
                }
              }
            }
          } ]
        },
        "Indicates" : {
          "type" : "object",
          "description" : "Shows that a vertex indicates a particular vertex (e.g. a RiskIndicator).",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "InstagramAccount" : {
          "type" : "object",
          "description" : "An account on Instagram, username https://www.instagram.com/{userName}, screenName corresponds to the name of the account home page.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          }, {
            "type" : "object",
            "properties" : {
              "isVerified" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IsVerified"
                }
              }
            }
          } ]
        },
        "IntRange" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/IntRangeValue"
            }
          }
        },
        "IntRangeValue" : {
          "type" : "object",
          "properties" : {
            "minimum" : {
              "type" : "integer",
              "format" : "int32"
            },
            "maximum" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "description" : "A range of integers with the start and end values included."
        },
        "Interval" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/IntervalValue"
            }
          },
          "description" : "Interval between two date-time points (instants in time)."
        },
        "IntervalValue" : {
          "type" : "object",
          "properties" : {
            "startTime" : {
              "type" : "string",
              "format" : "date-time"
            },
            "endTime" : {
              "type" : "string",
              "format" : "date-time"
            }
          },
          "description" : "With the `startTime` and `endTime` in ISO 8601 time format"
        },
        "IsVerified" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "boolean"
            }
          },
          "description" : "Boolean indicating if an account is verified or not."
        },
        "Label" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "LegalIdentity" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Identity"
          } ]
        },
        "Likes" : {
          "type" : "object",
          "description" : "Indicates that an Account Likes another vertex e.g. another account.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "LinkedInAccount" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          } ]
        },
        "LinkedInPage" : {
          "type" : "object",
          "description" : "A page on LinkedIn that is used to represent a school or company.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          }, {
            "type" : "object",
            "properties" : {
              "employeeCount" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IntRange"
                }
              },
              "industry" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Label"
                }
              }
            }
          } ]
        },
        "ListsEducation" : {
          "type" : "object",
          "description" : "Indicates that an education is listed by an account.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "ListsEmployment" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "LocatedAt" : {
          "type" : "object",
          "description" : "Indicates that an entity (e.g. a Person) is located at a certain Location (e.g. with an Address).",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          }, {
            "type" : "object",
            "properties" : {
              "interval" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Interval"
                }
              },
              "timestamp" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DateTimestamp"
                }
              }
            }
          } ]
        },
        "Location" : {
          "type" : "object",
          "description" : "A location denoted with an address",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Address"
                }
              },
              "geographicLocation" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/GeographicLocation"
                }
              }
            }
          } ]
        },
        "MediaType" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/MediaTypeValue"
            }
          }
        },
        "MediaTypeValue" : {
          "required" : [ "mediaType" ],
          "type" : "object",
          "properties" : {
            "mediaType" : {
              "type" : "string",
              "enum" : [ "IMAGE", "VIDEO", "AUDIO", "TEXT" ]
            }
          }
        },
        "Mentions" : {
          "type" : "object",
          "description" : "Indicates that a vertex mentions a particular entity (e.g. a Person).",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          }, {
            "type" : "object",
            "properties" : {
              "matched" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Term"
                }
              }
            }
          } ]
        },
        "Organization" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/LegalIdentity"
          }, {
            "type" : "object",
            "properties" : {
              "organizationName" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/OrganizationName"
                }
              },
              "foundedDate" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Date"
                }
              }
            }
          } ]
        },
        "OrganizationName" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/OrganizationNameString"
            }
          }
        },
        "OrganizationNameString" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "PartialDateTime" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/PartialDateTimeValue"
            }
          },
          "description" : "Datetime value that can be incomplete."
        },
        "PartialDateTimeValue" : {
          "type" : "object",
          "properties" : {
            "year" : {
              "type" : "integer",
              "format" : "int32"
            },
            "month" : {
              "type" : "integer",
              "format" : "int32"
            },
            "week" : {
              "type" : "integer",
              "format" : "int32"
            },
            "day" : {
              "type" : "integer",
              "format" : "int32"
            },
            "hour" : {
              "type" : "integer",
              "format" : "int32"
            },
            "minute" : {
              "type" : "integer",
              "format" : "int32"
            },
            "second" : {
              "type" : "integer",
              "format" : "int32"
            },
            "millisecond" : {
              "type" : "integer",
              "format" : "int32"
            },
            "stringRepresentation" : {
              "type" : "string"
            }
          },
          "description" : "A datetime value of which each of its components are optional."
        },
        "Person" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/LegalIdentity"
          }, {
            "type" : "object",
            "properties" : {
              "personName" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PersonName"
                }
              },
              "dateOfBirth" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Date"
                }
              },
              "gender" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Gender"
                }
              },
              "nationality" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Country"
                }
              },
              "identificationDocument" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IdentificationDocument"
                }
              },
              "driverLicense" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DriverLicense"
                }
              }
            }
          } ]
        },
        "PersonName" : {
          "required" : [ "_type" ],
          "type" : "object",
          "properties" : {
            "_type" : {
              "type" : "string"
            }
          },
          "description" : "A name of a person, either a person name string, or an annotated name in case more details on the name structure are available (e.g. given name(s), family name, etc.)",
          "discriminator" : {
            "propertyName" : "_type"
          }
        },
        "PersonNameElement" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "role" : {
              "type" : "string",
              "enum" : [ "NICK_NAME", "TITLE", "GIVEN_NAME", "INITIAL", "FAMILY_NAME" ]
            },
            "value" : {
              "type" : "string"
            }
          }
        },
        "PersonNameString" : {
          "required" : [ "value" ],
          "type" : "object",
          "description" : "A person name of which the elements (tokens) aren't annotated. Use AnnotatedPersonName when more information is available, e.g. like given and last name are available as separate strings.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/PersonName"
          }, {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string"
              }
            }
          } ]
        },
        "PhoneNumber" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "number" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PhoneNumberString"
                }
              },
              "country" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Country"
                }
              }
            }
          } ]
        },
        "PhoneNumberString" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "Position" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "PostedOn" : {
          "type" : "object",
          "description" : "Indicates that the Resource is published somewhere.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Published" : {
          "type" : "object",
          "description" : "Indicates that the Account published this Resource.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Rating" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/RatingValue"
            }
          },
          "description" : "A rating found on for example a Google review."
        },
        "RatingValue" : {
          "required" : [ "rating", "ratingScaleMax", "ratingScaleMin" ],
          "type" : "object",
          "properties" : {
            "rating" : {
              "type" : "number",
              "format" : "double"
            },
            "ratingScaleMin" : {
              "type" : "number",
              "format" : "double"
            },
            "ratingScaleMax" : {
              "type" : "number",
              "format" : "double"
            }
          },
          "description" : "Rating value, including the minimum and maximum value a rating can be (e.g. on Google Places,you are bound by a minimum of 1 star and a maximum of 5)"
        },
        "ReplyTo" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Resource" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "resourceDescription" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              },
              "url" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Url"
                }
              },
              "createdAt" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DateTimestamp"
                }
              },
              "mediaType" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                }
              },
              "classification" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ResourceClassification"
                }
              },
              "title" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Title"
                }
              },
              "caption" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Caption"
                }
              },
              "representation" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Content"
                }
              }
            }
          } ]
        },
        "ResourceClassification" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/ResourceClassificationValue"
            }
          }
        },
        "ResourceClassificationValue" : {
          "required" : [ "classificationType" ],
          "type" : "object",
          "properties" : {
            "classificationType" : {
              "type" : "string",
              "enum" : [ "DEPICTS_CHILDREN" ]
            }
          }
        },
        "Review" : {
          "type" : "object",
          "description" : "A review for something (e.g. a GooglePlace).",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Resource"
          }, {
            "type" : "object",
            "properties" : {
              "rating" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Rating"
                }
              }
            }
          } ]
        },
        "ReviewedIn" : {
          "type" : "object",
          "description" : "Indicates that the GooglePlace was reviewed in this Review.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "RiskIndicator" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "riskCategory" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Label"
                }
              },
              "riskDescription" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              }
            }
          } ]
        },
        "SameAs" : {
          "type" : "object",
          "description" : "Indicates that a Vertex is the same as another Vertex.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "ScreenName" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          },
          "description" : "A human oriented name of an account, e.g. 'John Doe'."
        },
        "StudyProgramAt" : {
          "type" : "object",
          "description" : "Indicates that an education is a study program provided by an organization.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Edge"
          } ]
        },
        "Term" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "$ref" : "#/components/schemas/TermValue"
            }
          },
          "description" : "A term matched in a Resource. The term may be a single token or a 'phrase'. The term _may_ have an associated Locale."
        },
        "TermValue" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            },
            "locale" : {
              "type" : "string",
              "description" : "Locale with language and region sub tags as defined in https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry (but in all upper case).",
              "nullable" : true
            }
          }
        },
        "TiktokAccount" : {
          "type" : "object",
          "description" : "An account on TikTok, userName corresponds to https://www.tiktok.com/{userName}, screenName corresponds to the name of the account home page.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          }, {
            "type" : "object",
            "properties" : {
              "likes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "isVerified" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IsVerified"
                }
              }
            }
          } ]
        },
        "Title" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "TwitterAccount" : {
          "type" : "object",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          } ]
        },
        "Url" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        },
        "UserName" : {
          "required" : [ "value" ],
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          },
          "description" : "A name of an account in the 'user name space' of a platform, e.g. 'john.doe.5' or 'james_kirk'. Often used e.g. in url's or through a user referencing system like on twitter (@james_kirk). Note that a user name may or may not correspond to a user name used to log into an account if a user name is even used for that purpose at all."
        },
        "Vertex" : {
          "required" : [ "_type" ],
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Identifier of this vertex; is used to reference this vertex in e.g. an Edge or VertexPair.",
              "format" : "uuid"
            },
            "_type" : {
              "type" : "string"
            }
          },
          "description" : "Represents an entity (a person, facebook account, web resource, etc.) and its properties.",
          "discriminator" : {
            "propertyName" : "_type"
          }
        },
        "VertexPair" : {
          "type" : "object",
          "properties" : {
            "left" : {
              "type" : "string",
              "description" : "Represents an entity (a person, facebook account, web resource, etc.) and its properties.",
              "format" : "uuid"
            },
            "right" : {
              "type" : "string",
              "description" : "Represents an entity (a person, facebook account, web resource, etc.) and its properties.",
              "format" : "uuid"
            }
          },
          "description" : "A pair of (references to) two vertices in the request or response body."
        },
        "Website" : {
          "type" : "object",
          "description" : "A website, e.g. nu.nl or 4chan.org.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Vertex"
          }, {
            "type" : "object",
            "properties" : {
              "homepage" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Url"
                }
              },
              "title" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Title"
                }
              },
              "description" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Description"
                }
              }
            }
          } ]
        },
        "YouTubeAccount" : {
          "type" : "object",
          "description" : "An account on YouTube, accountId corresponds to https://www.youtube.com/channel/{accountId}, userName corresponds to https://www.youtube.com/username/{userName}, screenName corresponds to the name of the account home page.",
          "allOf" : [ {
            "$ref" : "#/components/schemas/Account"
          }, {
            "type" : "object",
            "properties" : {
              "viewCount" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CounterValue"
                }
              },
              "isVerified" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/IsVerified"
                }
              },
              "creationDate" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Date"
                }
              }
            }
          } ]
        },
        "ConnectResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "ConnectStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/ConnectResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a connect investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "Error" : {
          "type" : "object",
          "properties" : {
            "errorMessage" : {
              "type" : "string"
            }
          },
          "description" : "An error has occurred. This object provides an error message which gives insight as to what went wrong"
        },
        "InvestigationStatus" : {
          "type" : "object",
          "properties" : {
            "finished" : {
              "type" : "boolean",
              "description" : "Whether the investigation has finished executing, either successfully or erroneously"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            }
          },
          "description" : "The current status of an investigation: Either an error has occurred or the finished flag is set to the finished state of the requested investigation"
        },
        "ContactResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "ContactStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/ContactResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a contact investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "ContactScope" : {
          "required" : [ "countries", "graph", "subjects" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subjects" : {
              "minItems" : 1,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertexReference"
              }
            },
            "countries" : {
              "minItems" : 1,
              "type" : "array",
              "items" : {
                "type" : "string",
                "description" : "The areas of interest (countries) to target in the contact investigation."
              }
            },
            "emailSearch" : {
              "type" : "boolean"
            }
          },
          "description" : "The 'scope' of a contact investigation: the (background) information available on the investigation subjects and a list of pairs of entities to investigate (the subjects)."
        },
        "VertexReference" : {
          "required" : [ "vertex" ],
          "type" : "object",
          "properties" : {
            "vertex" : {
              "type" : "string",
              "description" : "Represents an entity (a person, facebook account, web resource, etc.) and its properties.",
              "format" : "uuid"
            }
          },
          "description" : "A reference to a vertex in the request or response body."
        },
        "CSERiskScope" : {
          "required" : [ "graph", "subjects" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subjects" : {
              "minItems" : 1,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertexReference"
              }
            },
            "darknetUsername" : {
              "type" : "boolean",
              "description" : "Enable or disable the Darknet Username check (defaults to false).",
              "nullable" : true
            },
            "accessToChildren" : {
              "type" : "boolean",
              "description" : "Enable or disable the Access to children check (defaults to false).",
              "nullable" : true
            },
            "scoutingRisk" : {
              "type" : "boolean",
              "description" : "Enable or disable the scouting Risk check (defaults to false).",
              "nullable" : true
            }
          },
          "description" : "The scope of a CSE Risk investigation: the (background) information available on the investigation subject(s) as a graph, a list of one or more subjects to investigate and options indicating whether to run specific sub-investigations (all available options default to false)."
        },
        "CSERiskResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "CSERiskStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/CSERiskResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a CSE Risk check: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "FacebookAccountCheckResult" : {
          "type" : "object",
          "properties" : {
            "accountAvailabilityStatus" : {
              "type" : "string",
              "enum" : [ "ONLINE", "SUSPENDED", "DISABLED" ]
            },
            "investigationPerformedTimestampMilliseconds" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "FacebookAccountStatusCheckExecutionStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/FacebookAccountCheckResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          }
        },
        "FacebookDetailScope" : {
          "required" : [ "subject" ],
          "type" : "object",
          "properties" : {
            "subject" : {
              "type" : "string",
              "description" : "The url, accountId or username to investigate."
            },
            "basicInfo" : {
              "type" : "boolean",
              "description" : "Whether to retrieve basic profile information, default true"
            },
            "workAndEducation" : {
              "type" : "boolean",
              "description" : "Whether to retrieve work and education, default true"
            },
            "checkins" : {
              "type" : "boolean",
              "description" : "Whether to retrieve checkins, default false"
            },
            "likes" : {
              "type" : "boolean",
              "description" : "Whether to retrieve likes, default false"
            }
          },
          "description" : "The 'scope' of a facebook detail investigation."
        },
        "FacebookResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "FacebookStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/FacebookResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a Facebook investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "EventDetailScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The 'scope' of a facebook event detail investigation."
        },
        "EventPostsScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The arguments for scraping posts from an event."
        },
        "EventSearchScope" : {
          "required" : [ "searchTerm" ],
          "type" : "object",
          "properties" : {
            "searchTerm" : {
              "type" : "string",
              "description" : "The keyword to use while searching for events."
            },
            "limit" : {
              "type" : "integer",
              "description" : "The number of search results to fetch.",
              "format" : "int32"
            }
          },
          "description" : "The 'scope' of a facebook event search investigation."
        },
        "FacebookFriendsScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            },
            "limit" : {
              "type" : "integer",
              "description" : "The number of friends to fetch.",
              "format" : "int32"
            }
          },
          "description" : "The scope of a Facebook friends investigation."
        },
        "GroupDetailScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The 'scope' of a facebook group detail investigation."
        },
        "GroupPostsScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The arguments for scraping posts from a group."
        },
        "GroupSearchScope" : {
          "required" : [ "searchTerm" ],
          "type" : "object",
          "properties" : {
            "searchTerm" : {
              "type" : "string",
              "description" : "The keyword to use while searching for groups."
            },
            "limit" : {
              "type" : "integer",
              "description" : "The number of search results to fetch.",
              "format" : "int32"
            },
            "filterPublic" : {
              "type" : "boolean",
              "description" : "Whether the search results should filter public groups."
            }
          },
          "description" : "The 'scope' of a facebook group search investigation."
        },
        "PageDetailScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The 'scope' of a facebook page detail investigation."
        },
        "FacebookPageSearchScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            },
            "searchLimit" : {
              "type" : "integer",
              "description" : "The search results limit, no more results will be returned. The maximum search limit is 50.",
              "format" : "int32"
            }
          },
          "description" : "The scope of a Facebook page search investigation."
        },
        "FacebookProfileSearchScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            },
            "searchLimit" : {
              "type" : "integer",
              "description" : "The search results limit, no more results will be returned. The maximum search limit is 50.",
              "format" : "int32"
            }
          },
          "description" : "The scope of a Facebook profile search investigation."
        },
        "GoogleSearchResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "GoogleStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/GoogleSearchResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a Google investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "GoogleSearchScope" : {
          "required" : [ "searchTerm" ],
          "type" : "object",
          "properties" : {
            "searchTerm" : {
              "type" : "string",
              "description" : "The keyword to use while searching on Google."
            },
            "searchLimit" : {
              "type" : "integer",
              "description" : "The search results limit, no more results will be returned. The maximum search limit is 20.",
              "format" : "int32"
            },
            "searchCountry" : {
              "type" : "string",
              "description" : "The country where to search from.",
              "enum" : [ "DE", "ES", "FR", "GB", "GR", "NL", "PK", "RU", "TR", "US", "IT", "BE", "SE", "RO" ]
            },
            "searchLanguage" : {
              "type" : "string",
              "description" : "The search results desired language",
              "enum" : [ "ar", "de", "el", "en", "es", "fr", "ru", "nl", "tr", "ur", "it", "sv", "ro" ]
            }
          },
          "description" : "The scope of a Google search investigation."
        },
        "InstagramProfileDetailsScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The 'scope' of an Instagram profile details investigation."
        },
        "InstagramResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "InstagramStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/InstagramResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of an Instagram investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "InstagramProfileSearchScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            },
            "searchLimit" : {
              "type" : "integer",
              "description" : "The search results limit, no more results will be returned. The maximum search limit is 50.",
              "format" : "int32"
            }
          },
          "description" : "The scope of an Instagram profile search investigation."
        },
        "LinkedInDetailScope" : {
          "required" : [ "subject" ],
          "type" : "object",
          "properties" : {
            "subject" : {
              "type" : "string",
              "description" : "The url, accountId or username to investigate."
            },
            "basicInfo" : {
              "type" : "boolean",
              "description" : "Whether to retrieve basic profile information, default true"
            },
            "work" : {
              "type" : "boolean",
              "description" : "Whether to retrieve work, default true"
            },
            "education" : {
              "type" : "boolean",
              "description" : "Whether to retrieve education, default true"
            }
          },
          "description" : "The 'scope' of a linkedin detail investigation."
        },
        "LinkedInResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "LinkedInStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/LinkedInResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a LinkedIn investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "LinkedInProfileSearchScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            },
            "searchLimit" : {
              "type" : "integer",
              "description" : "The search results limit, no more results will be returned. The maximum search limit is 10.",
              "format" : "int32"
            },
            "lookupDetails" : {
              "type" : "boolean",
              "description" : "Look up the details of the found profiles."
            }
          },
          "description" : "The 'scope' of a LinkedIn profile search investigation."
        },
        "RiskResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "RiskStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/RiskResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a risk investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "RiskInterest" : {
          "required" : [ "category", "locale" ],
          "type" : "object",
          "properties" : {
            "locale" : {
              "type" : "string",
              "description" : "Locale with language and region sub tags as defined in https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry (but in all upper case) to target in the investigation."
            },
            "category" : {
              "pattern" : "^[a-z][-a-z]*[a-z]$",
              "type" : "string",
              "description" : "A risk category to target in the investigation."
            }
          },
          "description" : "Represents an area of interest for risk analysis that is composed of a locale (a language and a country) and a risk category."
        },
        "RiskScope" : {
          "required" : [ "graph", "interests", "subjects" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subjects" : {
              "minItems" : 1,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/VertexReference"
              }
            },
            "interests" : {
              "uniqueItems" : true,
              "type" : "array",
              "description" : "The areas of interest (locales and categories) to target in the Risk Analysis investigation.",
              "items" : {
                "$ref" : "#/components/schemas/RiskInterest"
              }
            },
            "web" : {
              "type" : "boolean",
              "description" : "Whether to investigate risks found on the web in general."
            },
            "facebook" : {
              "type" : "boolean",
              "description" : "Whether to investigate risks on facebook."
            },
            "twitter" : {
              "type" : "boolean",
              "description" : "Whether to investigate risks on twitter."
            },
            "instagram" : {
              "type" : "boolean",
              "description" : "Whether to investigate risks on instagram."
            },
            "youtube" : {
              "type" : "boolean",
              "description" : "Whether to investigate risks on youtube."
            },
            "linkedIn" : {
              "type" : "boolean",
              "description" : "Whether to investigate risks on linkedin."
            },
            "googlePlaces" : {
              "type" : "boolean",
              "description" : "Whether to investigate risks on google places (only available for organizations)."
            }
          },
          "description" : "The 'scope' of a risk investigation: the (background) information available on the investigation subjects and a list of pairs of entities to investigate (the subjects)."
        },
        "TiktokProfileDetailsScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The scope of a TikTok profile details investigation."
        },
        "TiktokResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "TiktokStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/TiktokResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a Tiktok investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "TiktokProfileSearchScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The scope of a Tiktok profile search investigation."
        },
        "WebSearchScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            },
            "searchLimit" : {
              "type" : "integer",
              "description" : "The search results limit, no more results will be returned. The default search limit is 20.",
              "format" : "int32"
            }
          },
          "description" : "The scope of a Web search investigation."
        },
        "WebSearchResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "WebSearchStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/WebSearchResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a Web investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "YoutubeProfileDetailsScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The scope of a YouTube profile details investigation."
        },
        "YoutubeResult" : {
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            }
          },
          "description" : "The investigation result if the investigation completed successfully."
        },
        "YoutubeStatus" : {
          "type" : "object",
          "properties" : {
            "result" : {
              "$ref" : "#/components/schemas/YoutubeResult"
            },
            "error" : {
              "$ref" : "#/components/schemas/Error"
            },
            "done" : {
              "type" : "boolean",
              "description" : "Whether or not there is a result or an error in the execution status.",
              "readOnly" : true
            }
          },
          "description" : "The current status of a Youtube investigation: a result or an error if the execution completed or both are null if the execution has not completed."
        },
        "YoutubeProfileSearchScope" : {
          "required" : [ "graph", "subject" ],
          "type" : "object",
          "properties" : {
            "graph" : {
              "$ref" : "#/components/schemas/Graph"
            },
            "subject" : {
              "$ref" : "#/components/schemas/VertexReference"
            }
          },
          "description" : "The scope of a YouTube profile search investigation."
        }
      },
      "securitySchemes" : {
        "basicAuth" : {
          "type" : "http",
          "scheme" : "basic"
        }
      }
    }
  }